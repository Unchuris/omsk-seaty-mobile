# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
          uses: actions/checkout@v2

      - name: Cache node_modules/
          uses: actions/cache@v1
          id: node_cache
          with:
            path: node_modules
            key: ${{ runner.OS }}-yarn-cache-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.OS }}-yarn-cache-
      - name: Install Node Dependencies
          if: steps.node_cache.outputs.cache-hit != 'true'
          run: yarn --frozen-lockfile

      - name: Setup kernel for react native, increase watchers for release versions.
          run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Cache gradle
          uses: actions/cache@v1
          with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

      - name: Set up Ruby 2.6
          uses: actions/setup-ruby@v1
          with:
            ruby-version: 2.6

      - name: Install bundler for ruby package management
          run: gem install bundler -v "$(grep -A 1 "BUNDLED WITH" ./Gemfile.lock | tail -n 1)"
          working-directory: ./android

      - name: Cache ruby gems
          uses: actions/cache@v1
          id: ruby_cache
          with:
            path: android/vendor/bundle
            key: ${{ runner.os }}-gems-${{ hashFiles('**/android/Gemfile.lock') }}
            restore-keys: |
              ${{ runner.os }}-gems-

      - name: Install Ruby Dependencies
          if: steps.ruby_cache.outputs.cache-hit != 'true'
          run: |
            bundle config path vendor/bundle
            bundle install --jobs 4 --retry 3
          working-directory: ./android

      - name: android build release
          uses: maierj/fastlane-action@v1.4.0
          with:
            lane: 'android_beta_app'
            subdirectory: 'android'
            bundle-install-path: 'vendor/bundle'
